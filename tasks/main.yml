---
# tasks file for ansible-role-rsyslog

- include_vars: "{{ ansible_os_family }}.yml"

- name: Reconfigure the stock syslogd(8) on OpenBSD
  include_tasks: configure-OpenBSD-syslogd.yml
  when:
    - "ansible_os_family == 'OpenBSD'"
    - "'local' in rsyslog_mode"

- include_tasks: "install-{{ ansible_os_family }}.yml"

- name: Create WorkDirectory
  file:
    path: "{{ rsyslog_config_WorkDirectory }}"
    mode: 0755
    state: directory

- name: Create conf.d
  file:
    path: "{{ rsyslog_conf_dir }}"
    mode: 0755
    state: directory

- name: Configure as client
  include: configure-client.yml
  when: "'client' in rsyslog_mode"

- name: Configure as server
  include: configure-server.yml
  when: "'server' in rsyslog_mode"

- name: Configure as local
  include: configure-local.yml
  when: "'local' in rsyslog_mode"

- name: Create imfile inputs
  # XXX you cannot validate imfile fragments because they are not a valid
  # config themselves
  template:
    src: imfile.cfg.j2
    dest: "{{ rsyslog_conf_dir }}/900_{{ item.key }}.cfg"
  with_dict: "{{ rsyslog_imfile_inputs }}"
  notify:
    - Restart rsyslog

- name: Create imuxsock inputs
  # XXX you cannot validate imfile fragments because they are not a valid
  # config themselves
  template:
    src: imuxsock.cfg.j2
    dest: "{{ rsyslog_conf_dir }}/900_{{ item.key }}.cfg"
  with_dict: "{{ rsyslog_imuxsock_inputs }}"
  notify:
    - Restart rsyslog

- name: Create main rsyslog.conf
  template:
    src: rsyslog.conf.j2
    dest: "{{ rsyslog_conf_file }}"
    mode: 0644
    validate: "{{ rsyslog_bin }} -N 1 -f %s"
  notify:
    - Restart rsyslog

- name: Ensure default syslog service for the platform is NOT running
  service:
    name: "{{ rsyslog_default_syslog_service_name }}"
    state: stopped
    enabled: no
  when: rsyslog_default_syslog_service_name != None

- name: Start rsyslog
  service:
    name: "{{ rsyslog_service_name }}"
    state: started
    enabled: yes

# TODO install recover_qi.pl
